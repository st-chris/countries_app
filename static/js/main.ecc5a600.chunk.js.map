{"version":3,"sources":["components/Header.js","views/NoMatch.js","components/Api.js","makeRoutes.js","views/Home.js","components/Buttons.js","views/Countries.js","views/Country.js","views/List.js","views/Facts.js","routes.js","serviceWorker.js","index.js"],"names":["linkStyle","color","textDecoration","Header","react_default","a","createElement","react_router_dom","style","to","NoMatch","CountriesApi","apiUrl","initialData","_useState","useState","_useState2","Object","slicedToArray","data","setData","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","isError","setIsError","fetchData","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","result","wrap","_context","prev","next","axios","sent","t0","stop","_x","apply","this","arguments","useEffect","MakeRoutes","route","_CountriesApi","react_router","path","render","props","component","assign","routes","Home","Buttons","letters","map","item","name","substring","filter","value","index","self","indexOf","sort","console","log","letter","className","key","concat","Countries","match","params","country","startsWith","src","flag","width","alt","alpha2Code","charAt","Country","history","ctrData","find","goBack","onClick","region","nativeName","population","toLocaleString","capital","languages","language","List","arr","regions","i","push","optionItems","reduce","accumulator","currentValue","sortAsc","event","currentTarget","document","getElementById","input","b","mapData","sortDesc","str","area","innerHTML","id","onChange","Facts","ipCountry","findMinMax","max","maxArr","length","val","curArr","bigPop","bigArea","popComp","toFixed","areaComp","exact","Boolean","window","location","hostname","ReactDOM","basename","process","components_Header","makeRoutes_MakeRoutes","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ecc5a600.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Header() {\n  return (\n    <header>\n      <h1>Countries App</h1>\n      <Link style={linkStyle} to=\"/Home\">Home</Link> | <Link style={linkStyle} to=\"/countries\">Country index</Link> | <Link style={linkStyle} to=\"/list\">Country list</Link> | <Link style={linkStyle} to=\"/facts\">Facts</Link>\n    </header>\n  )\n};\n\nconst linkStyle = {\n  color: '#fff',\n  textDecoration: 'none'\n}\n\nexport default Header;\n","import React from 'react';\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <h3>Page not Found</h3>\n    </div>\n  );\n};\n\nexport default NoMatch;","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst CountriesApi = (apiUrl, initialData) => {\n  const [data, setData] = useState(initialData);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  const fetchData = async url => {\n    setIsError(false);\n    setIsLoading(true);\n\n    try {\n      const result = await axios(url);\n      setData(result.data);\n    } catch (error) {\n      setIsError(true);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(\n    () => {\n      fetchData(apiUrl);\n    },\n    [apiUrl]\n  );\n\n  return { data, isLoading, isError};\n};\n\nexport default CountriesApi;","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport CountriesApi from './components/Api';\n\nexport const MakeRoutes = route => {\n\n  const { data, isLoading, isError } = CountriesApi(\n    `https://restcountries.eu/rest/v2/all`\n  );\n\n  return (\n    <div>{isError && <div>Something went wrong...</div>}\n      {isLoading ? (\n        <div>Loading data...</div>\n      ) : ( \n    <Route\n      path={route.path}\n      render={props => (\n        <route.component { ...props} data={data} routes={route.routes} />\n      )}\n    />\n      )}</div>\n  );\n}","import React from 'react';\n\nconst Home = props => {\n  return (\n    <div>\n      <h3>Home View</h3>\n      <p>\n        Click on Country Index or Country List for more information.\n      </p>\n    </div>\n  );\n};\n\nexport default Home;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Buttons = (data) => {\n\n  const letters = data\n      .map(item => item.name.substring(0, 1))\n      .filter((value, index, self) => {\n        return self.indexOf(value) === index;\n      }).sort();\n\n  console.log('buttons reloaded');\n  \n  return letters.map((letter, index) => {\n    return (\n      <Link className=\"btn\" key={index} to={`/countries/${letter}`}>{letter}</Link>\n    )\n  });\n}\n\nexport default Buttons;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Buttons from '../components/Buttons';\n\nconst Countries = ({ match, data }) => {\n  \n\n  const showIndex = () => {\n    if(match.params.letter) {\n      return data.filter(country => country.name.startsWith(match.params.letter)).map((country, index) => {\n        return (\n          <li key={index}>\n          <img src={country.flag} width=\"15px\" alt={country.name} /> <Link to={`${match.url}/${country.alpha2Code}`}>{country.name}</Link>\n          </li>\n        )\n      })\n    } else {\n      return data.map((country, index) => {\n        return (\n          <li key={index}>\n            <img src={country.flag} width=\"15px\" alt={country.name} /> <Link to={`${match.url}/${country.name.charAt(0)}/${country.alpha2Code}`}>{country.name}</Link>\n          </li>\n        )\n      })\n    }\n  };\n\n  return (\n    <div>\n      {Buttons(data)}\n      <div className=\"countries\">\n        <ul>\n          { showIndex() }\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Countries;","import React from 'react';\n\nconst Country = ({ data, match, history }) => {\n  \n  const ctrData = data.find(country => country.alpha2Code === match.params.country);\n\n  const goBack = () => history.goBack();\n  if(!ctrData) {\n    return <div><h3>Country not found  <button onClick={goBack} className=\"btn\">Go back..</button></h3></div>\n  } else {\n    return (\n      <div>\n        <h3><button onClick={goBack} className=\"btn\">Go back..</button></h3>\n        <div className=\"ctr-container\">\n          <div className=\"ctr-grid-container\">\n            <div className=\"ctr-item-head\"><span><h1>{ctrData.name} ({ctrData.region})</h1> {ctrData.nativeName}</span></div>\n            <div className=\"ctr-item\"><img src={ctrData.flag} alt={ctrData.name} /></div>\n            <div className=\"ctr-item\"><span>Population: <h2>{ctrData.population.toLocaleString('en')}</h2></span></div>\n            <div className=\"ctr-item\"><span>Capital: <h2>{ctrData.capital}</h2></span></div>\n            <div className=\"ctr-item\"><span>Language(s): <br/><h2>\n            {ctrData.languages.map((language, index) => {\n              return index > 0 ? ', ' + language.name : language.name;\n            })}</h2></span></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Country;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst List = ({ data }) => {\n \n  // Get unique values from array\n  const uniqVal = (arr) => {\n    const uniqArr = arr.reduce(function (accumulator, currentValue) {\n        if (accumulator.indexOf(currentValue) === -1) {\n          accumulator.push(currentValue);\n        }\n        return accumulator\n      }, [])\n\n    return uniqArr;\n  };\n\n  // Get regions\n  let regions = [];\n  for (let i in data) { \n    regions.push(data[i].region ? data[i].region : \"No region\");\n  };\n  regions = uniqVal(regions).sort();\n  // Create ddl option for each region\n  let optionItems = regions.map((region, index) => <option key={index} value={region}>{region}</option>);\n\n  // Sort - Ascending\n  const sortAsc = (event) => {\n    const value = event.currentTarget.value;\n    const region = document.getElementById(\"ddlRegion\").value;\n\n    if(region === 'allregions') {\n      const input = data.sort((a, b) => a[value] - b[value]);\n      mapData(input);\n    } else {\n      const input = data.filter((country) => country.region === region).sort((a, b) => a[value] - b[value]);\n      mapData(input);\n    }\n  };\n\n  // Sort - Descending\n  const sortDesc = (event) => {\n    const value = event.currentTarget.value;\n    const region = document.getElementById(\"ddlRegion\").value;\n\n    if(region === 'allregions') {\n      const input = data.sort((a, b) => b[value] - a[value]);\n      mapData(input)\n    } else {\n      const input = data.filter((country) => country.region === region).sort((a, b) => b[value] - a[value]);\n      mapData(input);\n    }\n  };\n\n  // Filtering\n  const filterList = () => {\n    const region = document.getElementById(\"ddlRegion\").value;\n    if(region === 'allregions') {\n      mapData();\n    } else {\n      const input = data.filter((country) => country.region === region);\n      mapData(input);\n    }\n  };\n\n  // Data map & show\n  const mapData = (input) => {\n    let str = \"\";\n    (input ? input : data).map((country, index) => {\n      str += `<tr key=${index}>\n                <td class=\"c1\"><img src=${country.flag} width=\"15px\" alt=${country.name} /></td>\n                <td><a href=\"/countries/${country.name.charAt(0)}/${country.alpha2Code}\">${country.name}</a></td>\n                <td>${country.region}</td>\n                <td class=\"c-m\">${country.population.toLocaleString('en')}</td>\n                <td class=\"c-m\">${country.area ? country.area.toLocaleString('en') : \"n/a\"}</td>\n              </tr>`\n      return str;\n    })\n    document.getElementById(\"hier\").innerHTML = str;\n  };\n\n  // Initial map & show\n  const showList = () => {\n    return data.map((country, index) => {\n      return (\n        <tr key={index}>\n          <td className=\"c1\"><img src={country.flag} width=\"15px\" alt={country.name} /></td>\n          <td><Link to={`/countries/${country.name.charAt(0)}/${country.alpha2Code}`}>{country.name}</Link></td>\n          <td>{country.region ? country.region : country.region = \"No region\"}</td>\n          <td className=\"c-m\">{country.population.toLocaleString('en')}</td>\n          <td className=\"c-m\">{country.area ? country.area.toLocaleString('en') : \"n/a\"}</td>\n        </tr>\n      )\n    })\n  };\n\n  return (\n    <div className=\"ctr-container\">\n      <table>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Name</th>\n            <th>\n              <label>\n                <select id=\"ddlRegion\" className=\"select\" onChange={filterList}>\n                  <option value=\"allregions\">All Regions</option>\n                  {optionItems}\n                </select>\n              </label>\n            </th>\n            <th className=\"c-m\"><button value=\"population\" onClick={sortAsc}>↑</button> Population <button value=\"population\" onClick={sortDesc}>↓</button></th>\n            <th className=\"c-m\"><button value=\"area\" onClick={sortAsc}>↑</button> Area (km2)<button value=\"area\" onClick={sortDesc}>↓</button></th>\n          </tr>\n        </thead>\n        <tbody id=\"hier\">\n          {showList()}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default List;","import React from 'react';\n\nimport CountriesApi from '../components/Api';\n\n\nconst Facts = (props) => {\n\n  const ctrData = props.data;\n  const { data, isLoading, isError } = CountriesApi(\n    `https://ipapi.co/country`,\n    []\n  );\n  \n\n  // Find country info on alpha2 from IP\n  const ipCountry = !isLoading ? ctrData.find(country => country.alpha2Code === data) : {\n    \"name\": \"\",\n    \"flag\": \"\",\n    \"area\": \"\"\n  };\n\n  // Find country with max pop. / area\n  const findMinMax = (arr, value) => {\n    let max = arr[0][value], maxArr = arr[0];\n    for (let i = 1; i < arr.length; i++) {\n      let val = arr[i][value];\n      let curArr = arr[i];\n      // max = (v > max) ? v : max;\n      if(val > max) {\n        max = val;\n        maxArr = curArr;\n      }\n      // maxn = (v > max) ? name : maxn;\n    }\n    return maxArr;\n  }\n\n  // Store country info in variable\n  let bigPop = !isLoading ? findMinMax(ctrData, 'population') : \"\";\n  let bigArea = !isLoading ? findMinMax(ctrData, 'area') : \"\";\n\n  const popComp = `${bigPop.name} has ${(bigPop.population / ipCountry.population).toFixed()} times more inhabitants than ${ipCountry.name}.`;\n  const areaComp = `${bigArea.name} is ${(bigArea.area / ipCountry.area).toFixed()} times bigger than ${ipCountry.name} (in km2).`;\n  \n  return (\n    <div>\n      {isError && <div>Something went wrong..</div>}\n      {isLoading ? (\n        <div>Loading data...</div>\n      ) : (\n        <div className=\"ctr-container\">\n          <section className=\"fct-grid-container\">\n            <div className=\"fct-item-head\"><span><h1>Facts</h1></span></div>\n            <div className=\"fct-item\"><b>Your country (IP):</b></div>\n            <div className=\"fct-item\"><img src={ipCountry.flag} alt={ipCountry.name} /></div>\n            <div className=\"fct-item\"><span><h2>{ipCountry.name}</h2>Population: {ipCountry.population.toLocaleString('en')} <br />Area: {ipCountry.area.toLocaleString('en')} km2</span></div>\n            <div className=\"fct-item\"><b>Biggest country in population:</b></div>\n            <div className=\"fct-item\"><img src={bigPop.flag} alt={bigPop.name} /></div>\n            <div className=\"fct-item\"><span><h2>{bigPop.name}</h2>{bigPop.population.toLocaleString('en')}</span></div>\n            <div className=\"fct-item-ft\"><em>{popComp}</em></div>\n            <div className=\"fct-item\"><b>Biggest country in area (km2):</b></div>\n            <div className=\"fct-item\"><img src={bigArea.flag} alt={bigArea.name} /></div>\n            <div className=\"fct-item\"><span><h2>{bigArea.name}</h2>{bigArea.area.toLocaleString('en')} km2</span></div>\n            <div className=\"fct-item-ft\"><em>{areaComp}</em></div>\n          </section>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Facts;","import React from 'react';\nimport { Switch } from 'react-router-dom';\n\nimport Header from './components/Header';\nimport NoMatch from './views/NoMatch';\nimport { MakeRoutes } from './makeRoutes';\n\nimport Home from './views/Home';\nimport Countries from './views/Countries';\nimport Country from './views/Country';\nimport List from './views/List';\nimport Facts from './views/Facts'\n\nimport './App.css';\n\n\nconst routes = [\n  {\n    path: \"/\",\n    component: Home,\n    exact: \"\"\n  },\n  {\n    path: \"/Home\",\n    component: Home,\n    exact: \"\"\n  },\n  {\n    path: \"/Countries\",\n    component: Countries,\n    exact: \"\"\n  },\n  {\n    path: \"/countries/:letter\",\n    component: Countries,\n    exact: \"\"\n  },\n  {\n    path: \"/countries/:letter/:country\",\n    component: Country,\n    exact: \"\"\n  },\n  {\n    path: \"/list\",\n    component: List\n  },\n  {\n    path: \"/facts\",\n    component: Facts\n  },\n  {\n    path: \"/:WhereTheHeckIsThat\",\n    component: NoMatch,\n  },\n  {\n    path: \"/:WhereTheHeckIsThat\",\n    component: NoMatch,\n  }\n];\n\nexport const Routes = (props) => {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Header />\n        <div className=\"content\">\n          <Switch>\n            {\n              routes.map(\n                (route, index) => <MakeRoutes key={index} {...route} {...props} />\n              )\n            }\n          </Switch>\n        </div>\n      </div>\n    </div>\n  );\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Routes } from './routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <Routes />\n    \n  </Router>, \n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}